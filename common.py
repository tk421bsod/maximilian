#common.py: a shared library containing a bunch of useful stuff
import logging

class Version:
    def __init__(self):
        self.major = 0
        self.minor = 0
        self.patch = 0

class token:
    def get(self, filename):
        self.logger = logging.getLogger(name=f'maximilian.{__name__}')
        self.logger.info(f"Getting token from {filename}.")
        try:
            with open(filename, "r") as tokenfile:
                return tokenfile.readline()
        except:
            print("Couldn't find a file containing a token. It needs to be named either 'token.txt' (stable), 'betatoken.txt' (beta), or 'devtoken.txt' (dev).")

def load_config():
    '''Loads configuration data from the config file generated by setup.sh.'''
    config = {}
    #Uncomment the following line to suppress KeyErrors that can happen when trying to access config. This may break stuff.
    #import collections; config = collections.defaultdict(lambda: None)
    with open('config', 'r') as configfile:
        for i in configfile.readlines():
            if not i.strip().startswith('#') and i.strip():
                i = i.strip().split(':',1)
                config[i[0]] = i[1]
    return config
